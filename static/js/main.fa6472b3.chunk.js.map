{"version":3,"sources":["components/Burger/Ingredient/Ingredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/Control/Control.module.css","components/UI/Modal/Modal.module.css","components/Navigation/NavItems/NavItem/NavItem.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Logo/Logo.module.css","components/Navigation/NavItems/NavItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Navigation/BurgerMenu/BurgerMenu.module.css","containers/Layout/Layout.module.css","components/Burger/Burger.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/BurgerMenu/BurgerMenu.js","components/Navigation/Toolbar/Toolbar.js","containers/Layout/Layout.js","store/actions.js","components/Burger/Ingredient/Ingredient.js","components/Burger/Burger.js","components/Burger/BuildControls/Control/Control.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Button/Button.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/OrdersTracker/OrdersTracker.js","App.js","store/rootReducer.js","index.js"],"names":["module","exports","Logo","className","styles","to","src","burgerLogo","alt","NavItem","link","children","activeClassName","active","NavItems","state","promptEvent","handler","event","preventDefault","setState","onClick","prompt","window","addEventListener","this","removeEventListener","Component","Backdrop","isShown","close","role","SideDrawer","isActive","closeSideDrawer","attachedStyle","Opened","Closed","BurgerMenu","open","Toolbar","openSideDrawer","HideNavItems","Layout","isSideDrawerActive","openSideDrawerHandler","closeSideDrawerHandler","Content","props","ADD_INGREDIENT","REMOVE_INGREDIENT","RESET_INGREDIENTS","Ingredient","ingredient","type","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BreadBottom","Burger","ingredients","transformedIngredients","Object","keys","map","Array","value","index","key","toString","isBurgerEmpty","length","Control","label","add","remove","isDisabled","Label","More","Less","disabled","ingredientInfo","BuildControls","price","isPurchasable","order","addIngredient","removeIngredient","disabledIngredients","OrderButton","Modal","closeModal","modalClass","showModal","hideModal","React","memo","prevProps","nextProps","OrderSummary","ingredientsList","Button","buttonType","click","defaultProps","BurgerBuilder","isOrdered","checkIsBurgerPurchasable","values","reduce","totalSum","currentValue","createOrderHandler","cancelOrderHandler","submitOrderHandler","history","push","connect","dispatch","actionTypes","payload","ingredientType","CheckoutSummary","checkoutCanceled","checkoutContinued","BurgerPreview","Input","placeholder","isValid","isTouched","inputChange","ErrorMessage","InputElement","Invalid","onChange","ContactData","firstName","validationRules","isRequired","lastName","email","isFormValid","orderHandler","orderId","Number","sessionStorage","getItem","setItem","String","id","customerInfo","orders","JSON","parse","stringify","resetBurger","inputChangeHandler","inputField","inputValue","target","prevState","newState","newInputField","checkIsInputValid","checkIsFormValid","rules","trim","currentState","inputProperties","entries","input","properties","Checkout","goBack","continueOrderHandler","replace","match","path","component","Order","OrdersTracker","App","OrderTracker","exact","from","render","ingredientsPrices","meat","cheese","salad","bacon","initialState","rootReducer","action","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fa6472b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"Ingredient_BreadBottom__YWYF2\",\"BreadTop\":\"Ingredient_BreadTop__2YzKg\",\"Seeds1\":\"Ingredient_Seeds1__1Pwwt\",\"Seeds2\":\"Ingredient_Seeds2__2SW-a\",\"Meat\":\"Ingredient_Meat__231K9\",\"Cheese\":\"Ingredient_Cheese__2IPPj\",\"Salad\":\"Ingredient_Salad__wV7B5\",\"Bacon\":\"Ingredient_Bacon__3a5Ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__33Ohi\",\"InputElement\":\"Input_InputElement__1OW_p\",\"Invalid\":\"Input_Invalid__1QVHL\",\"ErrorMessage\":\"Input_ErrorMessage__19F7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2BrkN\",\"Opened\":\"SideDrawer_Opened__1cYHR\",\"Closed\":\"SideDrawer_Closed__18m_0\",\"Logo\":\"SideDrawer_Logo__1dvf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Control_Control__29Ag0\",\"Label\":\"Control_Label__3SwvF\",\"Less\":\"Control_Less__2lOVu\",\"More\":\"Control_More__xe9CT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__oGIez\",\"showModal\":\"Modal_showModal__1emui\",\"hideModal\":\"Modal_hideModal__2Sqed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__1w21n\",\"active\":\"NavItem_active__2-wjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3qjCi\",\"HideNavItems\":\"Toolbar_HideNavItems__2P3JM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__iCsOr\",\"OrderButton\":\"BuildControls_OrderButton__3_XqE\",\"enable\":\"BuildControls_enable__3c7Hr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__33SBO\",\"Success\":\"Button_Success__2J0lx\",\"Fail\":\"Button_Fail__3NFxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__eVVjj\",\"BurgerPreview\":\"CheckoutSummary_BurgerPreview__2isGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2KN0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__1J6Be\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__34wNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerMenu\":\"BurgerMenu_BurgerMenu__1x2nC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3Xkou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1vW09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3zxm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__gNf-Y\"};","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\nimport styles from \"./Logo.module.css\";\n\nconst Logo = () => (\n\n  <div className={styles.Logo}>\n    <Link to=\"/burger-builder\">\n      <img src={burgerLogo} alt=\"logo\" />\n    </Link>\n  </div>\n\n);\n\nexport default Logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./NavItem.module.css\";\n\nconst NavItem = ({ link, children }) => (\n  <li className={styles.NavItem}>\n    <NavLink to={link} activeClassName={styles.active}>{children}</NavLink>\n  </li>\n);\n\nNavItem.propTypes = { link: PropTypes.string.isRequired };\n\nexport default NavItem;\n","import React, { Component } from \"react\";\n\nimport NavItem from \"./NavItem/NavItem\";\nimport styles from \"./NavItems.module.css\";\n\nclass NavItems extends Component {\n\tstate = { promptEvent: null };\n\n\thandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({promptEvent: event});\n\t}\n\n\tcomponentDidMount(){\n\t\twindow.addEventListener(\"beforeinstallprompt\", this.handler);\n\n\t}\n\n\tcomponentWillUnmount(){\n\t\twindow.removeEventListener(\"transitionend\", this.handler);\n\t}\n\n\tonClick = () => {\n\t\tif (!this.state.promptEvent){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.promptEvent.prompt();\n\t}\n\n\trender(){\n\t\treturn (\n\t\t<ul className={styles.NavItems}>\n\t\t\t<NavItem link=\"/burger-builder\">Burger Builder</NavItem>\n\t\t\t<NavItem link=\"/orders\">Orders</NavItem>\n\t\t\t{this.state.promptEvent && <button onClick={this.onClick}>Install App</button>}\n\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default NavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Backdrop.module.css\";\n\nconst Backdrop = ({ isShown, close }) => (\n  isShown ? <div className={styles.Backdrop} onClick={close} role=\"presentation\" /> : null\n);\n\nBackdrop.propTypes = {\n  isShown: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired,\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Logo from \"../../Logo/Logo\";\nimport NavItems from \"../NavItems/NavItems\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport styles from \"./SideDrawer.module.css\";\n\nconst SideDrawer = ({ isActive, closeSideDrawer }) => {\n  let attachedStyle = styles.SideDrawer;\n  if (isActive) {\n    attachedStyle += ` ${styles.Opened}`;\n  } else {\n    attachedStyle += ` ${styles.Closed}`;\n  }\n\n  return (\n    <>\n      <Backdrop isShown={isActive} close={closeSideDrawer} />\n      <div className={attachedStyle}>\n        <div className={styles.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavItems />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nSideDrawer.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  closeSideDrawer: PropTypes.func.isRequired,\n};\n\nexport default SideDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./BurgerMenu.module.css\";\n\nconst BurgerMenu = ({ open }) => (\n  <div\n    role=\"presentation\"\n    className={styles.BurgerMenu}\n    onClick={open}\n  >\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nBurgerMenu.propTypes = { open: PropTypes.func.isRequired };\n\nexport default BurgerMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Logo from \"../../Logo/Logo\";\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\nimport NavItems from \"../NavItems/NavItems\";\nimport styles from \"./Toolbar.module.css\";\n\nconst Toolbar = ({ openSideDrawer }) => (\n  <header className={styles.Toolbar}>\n    <BurgerMenu open={openSideDrawer} />\n    <Logo />\n    <nav className={styles.HideNavItems}>\n      <NavItems />\n    </nav>\n  </header>\n);\n\nToolbar.propTypes = { openSideDrawer: PropTypes.func.isRequired };\n\nexport default Toolbar;\n","import React, { Component } from \"react\";\n\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport styles from \"./Layout.module.css\";\n\nclass Layout extends Component {\n  state = { isSideDrawerActive: false };\n\n  openSideDrawerHandler = () => {\n    this.setState({ isSideDrawerActive: true });\n  };\n\n  closeSideDrawerHandler = () => {\n    this.setState({ isSideDrawerActive: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Toolbar openSideDrawer={this.openSideDrawerHandler} />\n        <SideDrawer\n          isActive={this.state.isSideDrawerActive}\n          closeSideDrawer={this.closeSideDrawerHandler}\n        />\n        <main className={styles.Content}>\n          {this.props.children}\n        </main>\n      </>\n    );\n  }\n}\nexport default Layout;\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const RESET_INGREDIENTS = \"RESET_INGREDIENTS\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Ingredient.module.css\";\n\nconst Ingredient = ({ type }) => {\n  let ingredient;\n\n  switch (type) {\n    case \"breadTop\":\n      ingredient = (\n        <div className={styles.BreadTop}>\n          <div className={styles.Seeds1} />\n          <div className={styles.Seeds2} />\n        </div>\n      );\n      break;\n    case \"meat\":\n      ingredient = <div className={styles.Meat} />;\n      break;\n    case \"cheese\":\n      ingredient = <div className={styles.Cheese} />;\n      break;\n    case \"salad\":\n      ingredient = <div className={styles.Salad} />;\n      break;\n    case \"bacon\":\n      ingredient = <div className={styles.Bacon} />;\n      break;\n    case \"breadBottom\":\n      ingredient = <div className={styles.BreadBottom} />;\n      break;\n    default:\n      ingredient = null;\n  }\n\n  return ingredient;\n};\n\nIngredient.propTypes = { type: PropTypes.string.isRequired };\n\nexport default Ingredient;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Ingredient from \"./Ingredient/Ingredient\";\nimport styles from \"./Burger.module.css\";\n\nconst Burger = ({ ingredients }) => {\n  const transformedIngredients = Object.keys(ingredients)\n    .map((ingredient) => [...Array(ingredients[ingredient])]\n      .map((value, index) => (\n        <Ingredient\n          type={ingredient}\n          key={ingredient + value + index.toString()}\n        />\n      )));\n\n  let isBurgerEmpty = true;\n  for (const ingredient of transformedIngredients) {\n    if (ingredient.length > 0) {\n      isBurgerEmpty = false;\n      break;\n    }\n  }\n\n  return (\n    <div className={styles.Burger}>\n      <Ingredient type=\"breadTop\" />\n      {isBurgerEmpty ? \"Please add ingredients\" : transformedIngredients}\n      <Ingredient type=\"breadBottom\" />\n    </div>\n  );\n};\n\nBurger.propTypes = { ingredients: PropTypes.objectOf(PropTypes.number).isRequired };\n\nexport default Burger;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Control.module.css\";\n\nconst Control = ({ label, add, remove, isDisabled }) => (\n  <div className={styles.Control}>\n    <div className={styles.Label}>{label}</div>\n    <button\n      className={styles.More}\n      type=\"button\"\n      onClick={add}\n    >More\n    </button>\n    <button\n      className={styles.Less}\n      type=\"button\"\n      onClick={remove}\n      disabled={isDisabled}\n    >Less\n    </button>\n  </div>\n);\n\nControl.propTypes = {\n  label: PropTypes.string.isRequired,\n  add: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n};\n\nexport default Control;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Control from \"./Control/Control\";\nimport styles from \"./BuildControls.module.css\";\n\nconst ingredientInfo = [\n  { label: \"Meat\", type: \"meat\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n];\n\nconst BuildControls = ({\n  price,\n  isPurchasable,\n  order,\n  addIngredient,\n  removeIngredient,\n  disabledIngredients,\n}) => (\n  <div className={styles.BuildControls}>\n    <p>Current Price: <strong>{price}$</strong></p>\n    {\n      ingredientInfo.map((ingredient) => (\n        <Control\n          key={ingredient.label}\n          label={ingredient.label}\n          add={() => addIngredient(ingredient.type)}\n          remove={() => removeIngredient(ingredient.type)}\n          isDisabled={disabledIngredients[ingredient.type]}\n        />\n      ))\n    }\n    <button\n      type=\"button\"\n      className={styles.OrderButton}\n      disabled={!isPurchasable}\n      onClick={order}\n    >Order now\n    </button>\n  </div>\n);\n\nBuildControls.propTypes = {\n  price: PropTypes.number.isRequired,\n  isPurchasable: PropTypes.bool.isRequired,\n  order: PropTypes.func.isRequired,\n  addIngredient: PropTypes.func.isRequired,\n  removeIngredient: PropTypes.func.isRequired,\n  disabledIngredients: PropTypes.objectOf(PropTypes.bool).isRequired,\n};\n\nexport default BuildControls;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport styles from \"./Modal.module.css\";\n\nconst Modal = ({ isShown, children, closeModal }) => {\n  let modalClass = styles.Modal;\n  if (isShown) {\n    modalClass += ` ${styles.showModal}`;\n  } else {\n    modalClass += ` ${styles.hideModal}`;\n  }\n\n  return (\n    <>\n      <Backdrop isShown={isShown} close={closeModal} />\n      <div className={modalClass}>\n        {children}\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  isShown: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Modal, (prevProps, nextProps) => prevProps.isShown === nextProps.isShown);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./OrderSummary.module.css\";\n\nconst OrderSummary = ({ ingredients, price }) => {\n  const ingredientsList = Object.keys(ingredients)\n    .map((ingredient) => {\n      if (ingredients[ingredient] === 0) {\n        return null;\n      }\n\n      return (\n        <li\n          key={ingredient}\n        ><span>{ingredient}</span>: {ingredients[ingredient]}\n        </li>\n      );\n    });\n\n  return (\n    <>\n      <h3>Your Order</h3>\n      <p>A delicious burger with the following ingredients:</p>\n      <ul>\n        {ingredientsList}\n      </ul>\n      <h3>Your total price is: {price}$</h3>\n      <p>Continue to Checkout?</p>\n    </>\n  );\n};\n\nOrderSummary.propTypes = {\n  ingredients: PropTypes.objectOf(PropTypes.number).isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default OrderSummary;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Button.module.css\";\n\nconst Button = ({ buttonType, click, isDisabled, children }) => (\n  <button\n    type=\"button\"\n    className={`${styles.Button} ${styles[buttonType]}`}\n    onClick={click}\n    disabled={isDisabled}\n  >{children}\n  </button>\n);\n\nButton.propTypes = {\n  buttonType: PropTypes.oneOf([\"Success\", \"Fail\"]).isRequired,\n  click: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool,\n};\n\nButton.defaultProps = { isDisabled: false };\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actionTypes from \"../../store/actions\";\n\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Button from \"../../components/UI/Button/Button\";\n\nclass BurgerBuilder extends Component {\n  state = { isOrdered: false };\n\n  checkIsBurgerPurchasable = (ingredients) => {\n    const ingredientSum = Object.values(ingredients)\n      .reduce((totalSum, currentValue) => totalSum + currentValue, 0);\n    return ingredientSum > 0;\n  };\n\n  // addIngredientHandler = (type) => {\n  //   this.setState((prevState) => {\n  //     const ingredients = { ...prevState.ingredients };\n  //     let { price } = prevState;\n\n  //     ingredients[type] += 1;\n  //     price += this.ingredientsPrices[type];\n  //     const isPurchasable = this.checkIsBurgerPurchasable(ingredients);\n\n  //     return { ingredients, price, isPurchasable };\n  //   });\n  // };\n\n  // removeIngredientHandler = (type) => {\n  //   this.setState((prevState) => {\n  //     const ingredients = { ...prevState.ingredients };\n\n  //     if (ingredients[type] === 0) {\n  //       return null;\n  //     }\n\n  //     let { price } = prevState;\n\n  //     ingredients[type]--;\n  //     price -= this.ingredientsPrices[type];\n  //     const isPurchasable = this.checkIsBurgerPurchasable(ingredients);\n\n  //     return { ingredients, price, isPurchasable };\n  //   });\n  // };\n\n  createOrderHandler = () => {\n    this.setState({ isOrdered: true });\n  };\n\n  cancelOrderHandler = () => {\n    this.setState({ isOrdered: false });\n  };\n\n  submitOrderHandler = () => {\n    this.props.history.push(\"/checkout\");\n  }\n\n  render() {\n    const disabledIngredients = { ...this.props.ingredients };\n\n    for (const key of Object.keys(disabledIngredients)) {\n      disabledIngredients[key] = disabledIngredients[key] === 0;\n    }\n\n    return (\n      <>\n        <Modal isShown={this.state.isOrdered} closeModal={this.cancelOrderHandler}>\n          <OrderSummary ingredients={this.props.ingredients} price={this.props.price} />\n          <Button buttonType=\"Success\" click={this.submitOrderHandler}>CONTINUE</Button>\n          <Button buttonType=\"Fail\" click={this.cancelOrderHandler}>CANCEL</Button>\n        </Modal>\n        <Burger ingredients={this.props.ingredients} />\n        <BuildControls\n          price={this.props.price}\n          isPurchasable={this.checkIsBurgerPurchasable(this.props.ingredients)}\n          order={this.createOrderHandler}\n          addIngredient={this.props.addIngredient}\n          removeIngredient={this.props.removeIngredient}\n          disabledIngredients={disabledIngredients}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.ingredients,\n  price: state.price,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addIngredient: (type) => dispatch({ type: actionTypes.ADD_INGREDIENT, payload: { ingredientType: type } }),\n  removeIngredient: (type) => dispatch({ type: actionTypes.REMOVE_INGREDIENT, payload: { ingredientType: type } })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);\n","import React from \"react\";\n\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\n\nimport styles from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = ({ ingredients, checkoutCanceled, checkoutContinued }) => (\n  <div className={styles.CheckoutSummary}>\n    <h1>We hope it tastes well!</h1>\n    <div className={styles.BurgerPreview}>\n      <Burger ingredients={ingredients} />\n    </div>\n    <Button buttonType=\"Success\" click={checkoutContinued}>Continue</Button>\n    <Button buttonType=\"Fail\" click={checkoutCanceled}>Cancel</Button>\n  </div>\n);\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Input.module.css\";\n\nconst Input = ({ type, placeholder, value, isValid, isTouched, inputChange }) => (\n  <div className={styles.Input}>\n    {isValid ? null : <p className={styles.ErrorMessage}>Please enter a valid value!</p>}\n    <input\n      className={!isValid && isTouched ? `${styles.InputElement} ${styles.Invalid}` : styles.InputElement}\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={inputChange}\n    />\n  </div>\n);\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  isValid: PropTypes.bool.isRequired,\n  isTouched: PropTypes.bool.isRequired,\n  inputChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nimport * as actionTypes from \"../../../store/actions\";\nimport styles from \"./ContactData.module.css\";\n\nclass ContactData extends Component {\n  state = {\n    firstName: {\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: \"\",\n      validationRules: { isRequired: true },\n      isValid: false,\n      isTouched: false,\n    },\n    lastName: {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: \"\",\n      validationRules: { isRequired: true },\n      isValid: false,\n      isTouched: false,\n    },\n    email: {\n      type: \"email\",\n      placeholder: \"E-mail\",\n      value: \"\",\n      validationRules: { isRequired: true },\n      isValid: false,\n      isTouched: false,\n    },\n    isFormValid: false,\n  }\n\n  orderHandler = (event) => {\n    event.preventDefault();\n    const orderId = Number(sessionStorage.getItem(\"orderCount\")) + 1;\n    sessionStorage.setItem(\"orderCount\", String(orderId));\n\n    const order = {\n      id: orderId,\n      ingredients: { ...this.props.ingredients },\n      price: this.props.price,\n      customerInfo: { ...this.state }\n    };\n\n    const orders = JSON.parse(sessionStorage.getItem(\"orders\"));\n    orders.push(order);\n    sessionStorage.setItem(\"orders\", JSON.stringify(orders));\n\n    this.props.resetBurger();\n    this.props.history.push(\"/burger-builder\");\n  }\n\n  inputChangeHandler = (event, inputField) => {\n    const inputValue = event.target.value;\n    this.setState((prevState) => {\n      const newState = { ...prevState };\n      const newInputField = { ...newState[inputField] };\n\n      newInputField.value = inputValue;\n      newInputField.isValid = this.checkIsInputValid(inputValue, newInputField.validationRules);\n      newInputField.isTouched = true;\n      newState[inputField] = newInputField;\n\n      newState.isFormValid = this.checkIsFormValid(newState);\n\n      return newState;\n    });\n  }\n\n  checkIsInputValid = (inputValue, rules) => {\n    if (rules.isRequired) {\n      return inputValue.trim() !== \"\";\n    }\n    return true;\n  }\n\n  checkIsFormValid = (currentState) => {\n    let isFormValid = true;\n    for (const inputProperties of Object.values(currentState)) {\n      if (typeof (inputProperties) === \"boolean\") {\n        break;\n      }\n\n      if (!inputProperties.isValid) {\n        isFormValid = false;\n        break;\n      }\n    }\n\n    return isFormValid;\n  }\n\n  render() {\n    return (\n      <div className={styles.ContactData}>\n        <h3>Enter your Contact Data</h3>\n        <form>\n          {\n            Object.entries(this.state)\n              .map(([input, properties]) => (\n                input !== \"isFormValid\"\n                  ? (\n                    <Input\n                      key={input}\n                      type={properties.type}\n                      placeholder={properties.placeholder}\n                      value={properties.value}\n                      isValid={properties.isValid}\n                      isTouched={properties.isTouched}\n                      inputChange={(event) => this.inputChangeHandler(event, input)}\n                    />\n                  )\n                  : null\n              ))\n          }\n          <Button buttonType=\"Success\" isDisabled={!this.state.isFormValid} click={this.orderHandler}>Order</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ingredients: state.ingredients,\n  price: state.price\n});\n\nconst mapDispatchToProps = (dispatch) => ({ resetBurger: () => dispatch({ type: actionTypes.RESET_INGREDIENTS }) });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\n\nclass Checkout extends Component {\n  cancelOrderHandler = () => {\n    this.props.history.goBack();\n  }\n\n  continueOrderHandler = () => {\n    this.props.history.replace(`${this.props.match.path}/contact-data`);\n  }\n\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          ingredients={this.props.ingredients}\n          checkoutCanceled={this.cancelOrderHandler}\n          checkoutContinued={this.continueOrderHandler}\n        />\n        <Route\n          path={`${this.props.match.path}/contact-data`}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ ingredients: state.ingredients });\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Order.module.css\";\n\nconst Order = ({ ingredients, price, customerInfo }) => {\n  const transformedIngredients = Object.entries(ingredients)\n    .map((ingredient) => (ingredient[1] !== 0 ? <span key={ingredient[0]}>{`${ingredient[0]}: ${ingredient[1]}`}</span> : null));\n  return (\n    <div className={styles.Order}>\n      <p>Ingredients: {transformedIngredients}</p>\n      <p>Price: {price}</p>\n      <p>\n        Order is for: {customerInfo.firstName.value} {customerInfo.lastName.value},\n        with the following e-mail: {customerInfo.email.value}\n      </p>\n    </div>\n  );\n};\n\nOrder.propTypes = {\n  ingredients: PropTypes.objectOf(PropTypes.number).isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default Order;\n","import React, { Component } from \"react\";\n\nimport Order from \"../../components/Order/Order\";\n\nclass OrdersTracker extends Component {\n  render() {\n    return (\n      <div>\n        {\n          JSON.parse(sessionStorage.getItem(\"orders\")).map((order) => (\n            <Order\n              key={order.id}\n              ingredients={{ ...order.ingredients }}\n              price={order.price}\n              customerInfo={{ ...order.customerInfo }}\n            />\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default OrdersTracker;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport Layout from \"./containers/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport OrderTracker from \"./containers/OrdersTracker/OrdersTracker\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/burger-builder\" component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={OrderTracker} />\n            <Redirect exact from=\"/\" to=\"/burger-builder\" />\n            <Route render={() => <div>404</div>} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as actionTypes from \"./actions\";\n\nconst ingredientsPrices = {\n  meat: 1,\n  cheese: 0.25,\n  salad: 0.75,\n  bacon: 1.5\n};\n\nconst initialState = {\n  ingredients: {\n    meat: 0,\n    cheese: 0,\n    salad: 0,\n    bacon: 0\n  },\n  price: 2\n};\n\nconst rootReducer = (prevState = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT: {\n      const ingredient = action.payload.ingredientType;\n      return {\n        ingredients: {\n          ...prevState.ingredients,\n          [ingredient]: prevState.ingredients[ingredient] + 1,\n        },\n        price: prevState.price + ingredientsPrices[ingredient],\n      };\n    }\n\n    case actionTypes.REMOVE_INGREDIENT: {\n      const ingredient = action.payload.ingredientType;\n      return {\n        ingredients: {\n          ...prevState.ingredients,\n          [ingredient]: prevState.ingredients[ingredient] === 0 ? 0 : prevState.ingredients[ingredient] - 1,\n        },\n        price: prevState.price - ingredientsPrices[ingredient]\n      };\n    }\n\n    case actionTypes.RESET_INGREDIENTS:\n      return initialState;\n\n    default:\n      return prevState;\n  }\n};\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootReducer from \"./store/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nsessionStorage.setItem(\"orders\", JSON.stringify([]));\nsessionStorage.setItem(\"orderCount\", \"1\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}